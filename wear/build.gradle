apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'me.tatarka.retrolambda'

def propsFile = rootProject.file('keystore.properties')
def props = new Properties()
props.load(new FileInputStream(propsFile))

def buildNumber = System.getenv("BUILD_NUMBER") as Integer ?: Integer.parseInt(VERSION_CODE)

propsFile = rootProject.file('api_keys.properties')
def apiKeys = new Properties()
apiKeys.load(new FileInputStream(propsFile))

android {
    dexOptions {
        jumboMode = true
    }

    compileSdkVersion parseSdkVersion(COMPILE_SDK)
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        multiDexEnabled true

        applicationId "xyz.klinker.messenger"
        minSdkVersion 25
        targetSdkVersion parseSdkVersion(TARGET_SDK)

        versionName(VERSION_NAME + '.' + buildNumber)
        versionCode buildNumber * 100000
        project.archivesBaseName = "wear-${versionName}"

        buildConfigField("String", "GIPHY_API_KEY", "\"${apiKeys['GIPHY']}\"")
        buildConfigField("String", "ARTICLE_API_KEY", "\"${apiKeys['ARTICLE']}\"")
        buildConfigField("String", "YOUTUBE_API_KEY", "\"${apiKeys['YOUTUBE']}\"")
    }

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file(props['keystorefile'])
            storePassword props['keystorepassword']
            keyAlias props['keyalias']
            keyPassword props['keypassword']
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            signingConfig signingConfigs.debug
        }
        staging {
            versionNameSuffix "-STAGING"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release_fast {
            versionNameSuffix "-RELEASE"
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled false
            shrinkResources false
            //proguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError true
        disable 'GoogleAppIndexingWarning', 'AllowBackup', 'IconMissingDensityFolder',
                'InconsistentLayout', 'InvalidPackage', 'TrustAllX509TrustManager',
                'UnusedResources', 'StaticFieldLeak', 'NestedWeights', 'InflateParams',
                'MissingTranslation', 'ContentDescription', 'GradleCompatible', 'Assert',
                'MergeRootFrame', 'IconDensities', 'ObsoleteSdkInt', 'IconDuplicates'
        textOutput 'stdout'
        xmlReport false
        htmlReport true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile project(":shared")

    compile 'com.klinkerapps:wearable-reply:1.0.0'
    compile "com.google.android.gms:play-services-wearable:${GOOGLE_PLAY_SERVICES_VERSION}"

    compile "com.google.android.support:wearable:${WEARABLE_SUPPORT_VERSION}"
}

apply plugin: 'com.google.gms.google-services'
