/*
 * Copyright (C) 2016 Jacob Klinker
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

def propsFile = rootProject.file('keystore.properties')
def props = new Properties()
props.load(new FileInputStream(propsFile))

def buildNumber = System.getenv("BUILD_NUMBER") as Integer ?: Integer.parseInt(VERSION_CODE)

propsFile = rootProject.file('api_keys.properties')
def apiKeys = new Properties()
apiKeys.load(new FileInputStream(propsFile))

android {
    try {
        compileSdkVersion Integer.parseInt(COMPILE_SDK)
    } catch (Exception e) {
        compileSdkVersion COMPILE_SDK
    }

    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        applicationId "xyz.klinker.messenger"
        minSdkVersion Integer.parseInt(project.MIN_SDK)

        try {
            targetSdkVersion Integer.parseInt(TARGET_SDK)
        } catch (Exception e) {
            targetSdkVersion TARGET_SDK
        }

        versionName(VERSION_NAME + '.' + buildNumber)
        versionCode buildNumber
        project.archivesBaseName = "messenger-${versionName}"

        jackOptions {
            enabled Boolean.parseBoolean(USE_JACK)
        }

        buildConfigField("String", "GIPHY_API_KEY", "\"${apiKeys['GIPHY']}\"")
    }

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file(props['keystorefile'])
            storePassword props['keystorepassword']
            keyAlias props['keyalias']
            keyPassword props['keypassword']
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            signingConfig signingConfigs.debug
        }
        staging {
            versionNameSuffix "-STAGING"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release_fast {
            versionNameSuffix "-RELEASE"
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError true
        disable 'GoogleAppIndexingWarning', 'AllowBackup', 'IconMissingDensityFolder',
                'InconsistentLayout', 'InvalidPackage', 'TrustAllX509TrustManager',
                'UnusedResources'
        textOutput 'stdout'
        xmlReport false
        htmlReport true
    }
}

dependencies {
    compile "com.android.support:appcompat-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:support-v13:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:design:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:recyclerview-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:support-annotations:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:preference-v14:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:palette-v7:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:percent:${ANDROID_SUPPORT_VERSION}"
    compile "com.android.support:leanback-v17:${ANDROID_SUPPORT_VERSION}"
    compile 'com.github.paolorotolo:appintro:4.0.0'
    compile 'de.hdodenhof:circleimageview:2.1.0'
    compile 'com.afollestad:sectioned-recyclerview:0.2.3'
    compile 'com.afollestad:easyvideoplayer:0.2.9'
    compile 'com.afollestad:material-camera:0.2.14'
    compile 'com.github.bumptech.glide:glide:3.7.0'
    compile 'com.klinkerapps:android-smsmms:3.2.0'
    compile 'com.klinkerapps:link_builder:1.3.2'
    compile 'com.klinkerapps:android-chips:1.1.0@aar'
    compile 'com.larswerkman:lobsterpicker:1.0.1'
    compile 'com.github.chrisbanes:PhotoView:1.2.7'
    compile "com.google.firebase:firebase-crash:${FIREBASE_VERSION}"
    compile "com.google.android.gms:play-services-maps:${GOOGLE_PLAY_SERVICES_VERSION}"

    compile project(":api_implementation")
    compile project(":encryption")
    compile project(":giphy")

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.1.1"
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.0'
    testCompile 'org.powermock:powermock-api-mockito:1.6.0'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.0'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
}

apply plugin: 'com.google.gms.google-services'