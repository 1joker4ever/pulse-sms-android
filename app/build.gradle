/*
 * Copyright (C) 2016 Jacob Klinker
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

def propsFile = rootProject.file('keystore.properties')
def props = new Properties()
props.load(new FileInputStream(propsFile))

def buildNumber = System.getenv("BUILD_NUMBER") as Integer ?: Integer.parseInt(VERSION_CODE)

propsFile = rootProject.file('api_keys.properties')
def apiKeys = new Properties()
apiKeys.load(new FileInputStream(propsFile))

android {
    dexOptions {
        jumboMode = true
    }

    compileSdkVersion parseSdkVersion(COMPILE_SDK)
    buildToolsVersion BUILD_TOOLS_VERSION

    defaultConfig {
        multiDexEnabled true

        applicationId "xyz.klinker.messenger"
        minSdkVersion parseSdkVersion(project.MIN_SDK)
        targetSdkVersion parseSdkVersion(TARGET_SDK)

        versionName(VERSION_NAME + '.' + buildNumber)
        versionCode buildNumber
        project.archivesBaseName = "messenger-${versionName}"

        buildConfigField("String", "GIPHY_API_KEY", "\"${apiKeys['GIPHY']}\"")
        buildConfigField("String", "ARTICLE_API_KEY", "\"${apiKeys['ARTICLE']}\"")
        buildConfigField("String", "YOUTUBE_API_KEY", "\"${apiKeys['YOUTUBE']}\"")
    }

    signingConfigs {
        debug {
            storeFile file("../debug.keystore")
            storePassword "android"
            keyAlias "androiddebugkey"
            keyPassword "android"
        }
        release {
            storeFile file(props['keystorefile'])
            storePassword props['keystorepassword']
            keyAlias props['keyalias']
            keyPassword props['keypassword']
        }
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"
            signingConfig signingConfigs.debug
        }
        staging {
            versionNameSuffix "-STAGING"
            debuggable true
            signingConfig signingConfigs.debug
        }
        release_fast {
            versionNameSuffix "-RELEASE"
            debuggable true
            signingConfig signingConfigs.release
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'
            signingConfig signingConfigs.release
        }
    }

    lintOptions {
        abortOnError true
        disable 'GoogleAppIndexingWarning', 'AllowBackup', 'IconMissingDensityFolder',
                'InconsistentLayout', 'InvalidPackage', 'TrustAllX509TrustManager',
                'UnusedResources', 'StaticFieldLeak', 'NestedWeights', 'InflateParams', 'MissingTranslation'
        textOutput 'stdout'
        xmlReport false
        htmlReport true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile project(":shared")

    testCompile 'junit:junit:4.12'
    testCompile "org.robolectric:robolectric:3.3.1"
    testCompile 'org.mockito:mockito-all:1.9.5'
    testCompile 'org.powermock:powermock-mockito-release-full:1.6.1'
    testCompile 'org.powermock:powermock-module-junit4-rule:1.6.0'
    testCompile 'org.powermock:powermock-api-mockito:1.6.0'
    testCompile 'org.powermock:powermock-classloading-xstream:1.6.0'
    testCompile 'org.apache.maven:maven-ant-tasks:2.1.3'
}

apply plugin: 'com.google.gms.google-services'
