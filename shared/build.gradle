/*
 * Copyright (C) 2017 Luke Klinker
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def propsFile = rootProject.file('api_keys.properties')
def apiKeys = new Properties()
apiKeys.load(new FileInputStream(propsFile))

android {
    dexOptions {
        jumboMode = true
    }

    compileSdkVersion parseSdkVersion(COMPILE_SDK)

    defaultConfig {
        multiDexEnabled true

        minSdkVersion parseSdkVersion(project.MIN_SDK)
        targetSdkVersion parseSdkVersion(TARGET_SDK)

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        buildConfigField("String", "GIPHY_API_KEY", "\"${apiKeys['GIPHY']}\"")
        buildConfigField("String", "ARTICLE_API_KEY", "\"${apiKeys['ARTICLE']}\"")
        buildConfigField("String", "YOUTUBE_API_KEY", "\"${apiKeys['YOUTUBE']}\"")
    }

    buildTypes {
        debug {
            versionNameSuffix "-DEBUG"

            matchingFallbacks = ['release_fast', 'release']
        }
        staging {
            versionNameSuffix "-STAGING"
            debuggable true

            matchingFallbacks = ['release_fast', 'release']
        }
        release_fast {
            versionNameSuffix "-RELEASE"
            minifyEnabled false
            shrinkResources false
            debuggable true

            matchingFallbacks = ['release_fast', 'release']
        }
        release {
            minifyEnabled true
            shrinkResources false
            proguardFiles 'proguard-android-optimize.txt', 'proguard-rules.pro'

            matchingFallbacks = ['release_fast', 'release']
        }
    }

    lintOptions {
        abortOnError true
        disable 'InvalidPackage', 'UnusedAttribute', 'CommitPrefEdits', 'HardwareIds',
                'MissingTranslation', 'ContentDescription', 'GradleCompatible', 'InconsistentArrays',
                'ApplySharedPref', 'Assert', 'DefaultLocale', 'LocaleFolder', 'Typos', 'UnusedQuantity',
                'StaticFieldLeak', 'UnusedResources', 'TypographyEllipsis', 'TrustAllX509TrustManager',
                'IconDensities'
        textOutput 'stdout'
        xmlReport false
        htmlReport true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {

    api "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$KOTLIN_VERSION"

    //noinspection GradleCompatible
    api "androidx.core:core-ktx:$ANDROID_X_VERSION"
    api "androidx.appcompat:appcompat:$ANDROID_X_VERSION"
    api "androidx.emoji:emoji:$ANDROID_X_VERSION"
    api "androidx.annotation:annotation:$ANDROID_X_VERSION"
    api "com.google.android.material:material:$ANDROID_X_VERSION"
    api "androidx.palette:palette:$ANDROID_X_VERSION"
    api "androidx.legacy:legacy-preference-v14:$ANDROID_X_VERSION"
    api "androidx.leanback:leanback:$ANDROID_X_VERSION"
    api "androidx.percentlayout:percentlayout:$ANDROID_X_VERSION"
    api "androidx.browser:browser:$ANDROID_X_VERSION"
    api "androidx.exifinterface:exifinterface:$ANDROID_X_VERSION"

    api('com.crashlytics.sdk.android:crashlytics:2.9.1@aar') { transitive = true }
    api "com.google.firebase:firebase-core:$FIREBASE_CORE"
    api "com.google.firebase:firebase-auth:$FIREBASE_AUTH"
    api "com.google.android.gms:play-services-maps:$GOOGLE_PLAY_SERVICES_VERSION"

    annotationProcessor "com.github.bumptech.glide:compiler:$GLIDE_VERSION"
    api "com.github.bumptech.glide:glide:$GLIDE_VERSION"

    api 'com.klinkerapps:android-smsmms:5.0.2'
    api 'com.klinkerapps:link_builder:2.0.3'
    api 'com.klinkerapps:android-chips:1.3.0@aar'
    api 'com.klinkerapps:android-transcoder:1.0.1'
    api 'com.klinkerapps:article_viewer:0.25.3'
    api 'com.klinkerapps:giphy:1.1.2'
    api 'com.klinkerapps:floating-tutorial:1.0.4'

    api 'com.firebase:firebase-jobdispatcher:0.8.5'
    api 'com.github.apl-devs:appintro:v4.2.0'
    api 'com.github.yalantis:ucrop:2.2.2'
    api 'de.hdodenhof:circleimageview:2.2.0'
    api 'com.afollestad:sectioned-recyclerview:0.2.3'
    api 'com.afollestad:easyvideoplayer:0.3.0'
    api 'com.afollestad:drag-select-recyclerview:1.0.0'
    api 'com.larswerkman:lobsterpicker:1.0.1'
    api 'me.leolin:ShortcutBadger:1.1.19@aar'
    api 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
    api 'com.github.codekidX:storage-chooser:2.0.3'
    api 'com.afollestad.material-dialogs:core:0.9.4.5'
    api 'com.roughike:bottom-bar:2.3.1'
    api 'com.futuremind.recyclerfastscroll:fastscroll:0.2.5'

    implementation 'com.raycoarana.codeinputview:codeinputview:1.2.5'
    implementation 'com.github.ajalt.reprint:core:3.2.1@aar'

    api project(":api_implementation")
    api project(":encryption")

    api(name: 'sofa', ext: 'aar')
    api(name: 'material-camera', ext: 'aar')
    api(name: 'recyclerview-multiselect', ext: 'aar')

    testImplementation 'junit:junit:4.12'
    testImplementation "org.robolectric:robolectric:$ROBOLECTRIC_VERSION"
    testImplementation "org.mockito:mockito-core:$MOCKITO_VERSION"
    testImplementation 'org.apache.maven:maven-ant-tasks:2.1.3'
}
